package com.Revature.data.postgres;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Set;

import com.Revature.beans.Car;
import com.Revature.data.CarCollectionDAO;
import com.Revature.utils.ConnectionUtil;

public class CarPostgres implements CarCollectionDAO{
	private ConnectionUtil connUtil = ConnectionUtil.getConnectionUtil();


	@Override
	public int create(Car carToAdd) {
int generatedId = 0;
		
		// try-with-resources auto-closes resources
		try (Connection conn = connUtil.getConnection()) {
			// when you run DML statements, you want to manage the TCL
			conn.setAutoCommit(false);
			
			String sql = "insert into car ( yr, make, mdel, vinnum_id) values (? ,? ,? ,? )";
			String sql1 = "insert into car_description (vinnum, cartype, carfuel, enginetype, doors, fuelrange, zeroto60, price)"
					+ "values (? ,? ,? ,? ,? ,? ,? ,? );";
			String[] keys = {"id"}; // the name of the primary key column that will be autogenerated\
			String[] keys1 = {"vinnum"};
			// creating the prepared statement
			PreparedStatement pStmt = conn.prepareStatement(sql, keys);
			PreparedStatement pStmt1 = conn.prepareStatement(sql1, keys1);
			// we need to set the values of the question marks
			
			pStmt1.setString(1, carToAdd.getVinNum());
			pStmt1.setString(2, carToAdd.getCarType());
			pStmt1.setString(3, carToAdd.getCarFuel());
			pStmt1.setString(4, carToAdd.getEngineType());
			pStmt1.setInt(5, carToAdd.getDoors());
			pStmt1.setInt(6, carToAdd.getFuelRange());
			pStmt1.setDouble(7, carToAdd.getZeroTo60());
			pStmt1.setInt(8, carToAdd.getPrice());
			
			pStmt.setInt(1, carToAdd.getYear());
			pStmt.setString(2, carToAdd.getMake());
			pStmt.setString(3, carToAdd.getModel());
			pStmt.setString(4, carToAdd.getVinNum());
			
			// after setting the values, we can run the statement
			pStmt.executeUpdate();
			pStmt.executeUpdate();
			ResultSet resultSet = pStmt.getGeneratedKeys();
			ResultSet resultSet1 = pStmt1.getGeneratedKeys();
			
			if (resultSet.next() && resultSet1.next()) { // "next" goes to the next row in the result set (or the first row)
				// getting the ID value from the result set
				generatedId = resultSet.getInt("id");
				carToAdd.setId(resultSet.getInt("id"));
				conn.commit(); // running the TCL commit statement
			} else {
				conn.rollback();
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return generatedId;
	}

	@Override
	public Car getById(int id) {
	Car car = null;
		
		try (Connection conn = connUtil.getConnection()) {
			String sql = "select * from car"
					+ "join car_description on car.vinnum_id = car_description.vinnum"
					+ "where id=?"
					+ "order by id;";
			PreparedStatement pStmt = conn.prepareStatement(sql);
			pStmt.setInt(1, id);
			
			ResultSet resultSet = pStmt.executeQuery();
			
			if (resultSet.next()) {
				car = new Car();
				car.setId(resultSet.getInt("id"));
				car.setYear(resultSet.getInt("yr"));
				car.setMake(resultSet.getString("make"));
				car.setModel(resultSet.getString("mdel"));
				car.setVinNum(resultSet.getString("vinnum"));
				car.setColor(resultSet.getString("color"));
				car.setCarType(resultSet.getString("cartype"));
				car.setCarFuel(resultSet.getString("carfuel"));
				car.setEngineType(resultSet.getString("enginetype"));
				car.setFuelRange(resultSet.getInt("fuelrange"));
				car.setDoors(resultSet.getInt("doors"));
				car.setId(resultSet.getInt("id"));
				car.setPrice(resultSet.getInt("price"));
				car.setZeroTo60(resultSet.getDouble("zeroto60"));
			}
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return car;



	}

	@Override
	public Set<Car> getAll() {
		Set<Car> allCars = null;
		
		try (Connection conn = connUtil.getConnection()) {
			
			String sql = "select * from car   \r\n"
					+ "join car_description on car.vinnum_id = car_description.vinnum\r\n"
					+ "order by id;";
			Statement stmt = conn.createStatement();
			ResultSet resultSet = stmt.executeQuery(sql);
			
			while (resultSet.next()) {
				Car car = new Car();
				car.setYear(resultSet.getInt("yr"));
				car.setMake(resultSet.getString("make"));
				car.setModel(resultSet.getString("mdel"));
				car.setVinNum(resultSet.getString("vinnum"));
				car.setColor(resultSet.getString("color"));
				car.setCarType(resultSet.getString("cartype"));
				car.setCarFuel(resultSet.getString("carfuel"));
				car.setEngineType(resultSet.getString("enginetype"));
				car.setFuelRange(resultSet.getInt("fuelrange"));
				car.setDoors(resultSet.getInt("doors"));
				car.setId(resultSet.getInt("id"));
				car.setPrice(resultSet.getInt("price"));
				car.setZeroTo60(resultSet.getDouble("zeroto60"));
				
				allCars.add(car);	
			}
		
		
		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return allCars;
	}

	@Override
	public void update(Car dataToUpdate) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(Car dataToDelete) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Car getByMake(String make) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByModel(String model) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByYear(int year) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByVinNum(String vinNum) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByColor(String color) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByCarType(String carType) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByCarFuel(String carFuel) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByDoors(int doors) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByPrice(int price) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByZeroTo60(double zeroTo60) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByFuelRange(int fuelRange) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Car getByEngineType(String engineType) {
		// TODO Auto-generated method stub
		return null;
	}

}
